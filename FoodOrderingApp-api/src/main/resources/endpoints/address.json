{
  "swagger": "2.0",
  "info": {
    "title": "Address API",
    "version": "1.0.0",
    "description": "API of Address Services"
  },
  "host": "FoodOrderingApp.io",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/api",
  "tags": [
    {
      "name": "API#001 Address",
      "description": "All operations marked with 'API#001 Address' are relevant to the address use case"
    }
  ],
  "securityDefinitions": {
    "BearerAuthorization": {
      "type": "basic",
      "description": "Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens. The name “Bearer authentication” can be understood as “give access to the bearer of this token.”\nThe bearer token is a cryptic string, usually generated by the server in response to a login request. The client must send this token in the Authorization header when making requests to protected resources:\n``` Authorization: Bearer <token>\n```\nSimilarly to Basic authentication, Bearer authentication should only be used over HTTPS (SSL).\nRead https://jwt.io/introduction/ for more information on JWT standard.\n"
    }
  },
  "paths": {
    "/address": {
      "x-swagger-router-controller": "api",
      "post": {
        "tags": [
          "API#001 Save address"
        ],
        "operationId": "saveAddress",
        "summary": "Save address",
        "description": "Customer can save address permanently in database using this endpoint.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "in": "body",
            "name": "SaveAddressRequest",
            "description": "Request containing customer address information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveAddressRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "CREATED - Customer's address has been saved successfully",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              },
              "location": {
                "type": "string",
                "description": "Location of the new resource which was created by this request"
              }
            },
            "schema": {
              "$ref": "#/definitions/SaveAddressResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - customer has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/address/customer": {
      "x-swagger-router-controller": "api",
      "get": {
        "tags": [
          "API#001 Get all permanent address"
        ],
        "security": [
          {
            "BearerAuthorization": [
            ]
          }
        ],
        "operationId": "getAllPermanentAddress",
        "summary": "Get all permanent address",
        "description": "Customer can get all the saved permanent addresses.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Address list fetched successfully",
            "schema": {
              "$ref": "#/definitions/AddressListResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - customer has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/address/delete/{addressId}": {
      "x-swagger-router-controller": "api",
      "put": {
        "tags": [
          "API#001 Delete address"
        ],
        "security": [
          {
            "BearerAuthorization": [
            ]
          }
        ],
        "operationId": "deleteAddress",
        "summary": "Delete address",
        "description": "Customer can delete any saved permanent addresses.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/BearerAuthorization"
          },
          {
            "$ref": "#/parameters/addressId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK - Address has been deleted successfully",
            "schema": {
              "$ref": "#/definitions/DeleteAddressResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - customer has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    },
    "/states": {
      "x-swagger-router-controller": "api",
      "get": {
        "tags": [
          "API#001 Get all states"
        ],
        "operationId": "getAll",
        "summary": "get all states",
        "description": "Customer can get the list of all states available.\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK - States list fetched successfully",
            "schema": {
              "$ref": "#/definitions/StatesListResponse"
            }
          },
          "400": {
            "description": "BAD REQUEST - server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, mandatory elements are missing)",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "401": {
            "description": "UNAUTHORIZED - customer has provided wrong credentials",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "403": {
            "description": "FORBIDDEN - request has not been applied because client application has no permission to perform action",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          },
          "422": {
            "description": "UNPROCESSABLE ENTITY - request was well-formed but server unable to process due to semantic errors",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request flow to the backend"
              }
            }
          },
          "500": {
            "description": "INTERNAL SERVER ERROR - server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers": {
              "request-id": {
                "type": "string",
                "description": "Used as correlation id while tracing for the request in the backend"
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "addressId": {
      "name": "addressId",
      "type": "string",
      "in": "path",
      "format": "uuid",
      "required": true,
      "description": "Unique identifier of Restaurant in a standard UUID format"
    },
    "BearerAuthorization": {
      "name": "authorization",
      "type": "string",
      "in": "header",
      "required": true,
      "description": "Mandatory customer credentials in bearer http authentication scheme format."
    }
  },
  "definitions": {
    "SaveAddressRequest": {
      "type": "object",
      "properties": {
        "flat_building_name": {
          "type": "string",
          "description": "Flat and building address"
        },
        "locality": {
          "type": "string",
          "description": "Locality of the address"
        },
        "city": {
          "type": "string",
          "description": "City of the address"
        },
        "pincode": {
          "type": "string",
          "description": "pincode of the address"
        },
        "state_uuid": {
          "type": "string",
          "description": "Id of the state"
        }
      },
      "required": [
        "flat_building_name",
        "locality",
        "city",
        "pincode",
        "state_uuid"
      ]
    },
    "SaveAddressResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "uuid of the saved address"
        },
        "status": {
          "type": "string",
          "description": "message showing the status of the saved address"
        }
      },
      "required": [
        "id",
        "status"
      ],
      "example": {
        "id": "2ddf4646-ecd0-11e8-8eb2-f2801f1b9fd1",
        "status": "ADDRESS SUCCESSFULLY SAVED"
      }
    },
    "AddressListResponse": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/AddressList"
          },
          "description": "List of addresses"
        }
      }
    },
    "AddressList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier of the address in a standard UUID format"
        },
        "flat_building_name": {
          "type": "string",
          "description": "Flat and building address"
        },
        "locality": {
          "type": "string",
          "description": "Locality of the address"
        },
        "city": {
          "type": "string",
          "description": "City of the address"
        },
        "pincode": {
          "type": "string",
          "description": "pincode of the address"
        },
        "state": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "description": "Unique identifier of the state in a standard UUID format"
            },
            "state_name": {
              "type": "string",
              "description": "Name of the state"
            }
          }
        }
      }
    },
    "DeleteAddressResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "uuid of the deleted address"
        },
        "status": {
          "type": "string",
          "description": "message showing the status of the deleted address"
        }
      },
      "required": [
        "id",
        "status"
      ],
      "example": {
        "id": "2ddf4646-ecd0-11e8-8eb2-f2801f1b9fd1",
        "status": "ADDRESS DELETED SUCCESSFULLY"
      }
    },
    "StatesListResponse": {
      "type": "object",
      "properties": {
        "states": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/StatesList"
          },
          "description": "List of states"
        }
      }
    },
    "StatesList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "uuid",
          "description": "Unique identifier of the state in a standard UUID format"
        },
        "state_name": {
          "type": "string",
          "description": "Name of the state"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Application specific standard error code"
        },
        "message": {
          "type": "string",
          "description": "Error message stating the reason"
        },
        "root_cause": {
          "type": "string",
          "description": "Root cause of the Error"
        }
      },
      "required": [
        "code",
        "message"
      ],
      "example": {
        "code": "ADR-001",
        "message": "Address with this address id does not exist"
      }
    }
  }
}